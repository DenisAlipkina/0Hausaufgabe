lexer grammar IPFilter;

IP4 : HUNDERTER IP4HELPER IP4HELPER IP4HELPER ;
IP6 : DIGIT16BIT IP6HELPER IP6HELPER IP6HELPER IP6HELPER IP6HELPER IP6HELPER IP6HELPER ;


fragment IP6HELPER : ':' DIGIT16BIT ;
fragment IP4HELPER : '.' HUNDERTER ;
fragment HUNDERTER : [1] DIGIT1 DIGIT1 | ZEHNER | DIGIT1 | [2] [5] [0-5] | [2] [0-4] DIGIT1  ;
fragment ZEHNER : DIGIT2 DIGIT1 ;
fragment DIGIT1 : [0-9] ;
fragment DIGIT2 : [1-9] ;
fragment DIGITHEXA : DIGIT1 | [a-fA-F];
fragment DIGIT16BIT : DIGITHEXA DIGITHEXA DIGITHEXA DIGITHEXA | DIGITHEXA DIGITHEXA DIGITHEXA | DIGITHEXA DIGITHEXA | DIGITHEXA;


fragment UNALLOWED1 : [a-zA-Z]|[0-9] ;

// Everything else to be ignoredy
//SKIPIP4 : ((IP4 '.' UNALLOWED1 | IP4 UNALLOWED1) | (UNALLOWED1| UNALLOWED1 '.') IP4 | (UNALLOWED1 ':' IP4) | (IP4 ':' UNALLOWED1)) -> skip ;
//SKIPIP6 : ((IP6 '.' UNALLOWED1 | IP6 UNALLOWED1) | (UNALLOWED1| UNALLOWED1 '.') IP6 | (UNALLOWED1 ':' IP6) | (IP6 ':' UNALLOWED1)) -> skip ;
OTHER : . -> skip ;